//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Thinktecture.IdentityServer.Resources.Models.Configuration {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class GlobalConfiguration {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal GlobalConfiguration() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Thinktecture.IdentityServer.Resources.Models.Configuration.GlobalConfiguration", typeof(GlobalConfiguration).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default HTTP Token.
        /// </summary>
        public static string DefaultHttpTokenType {
            get {
                return ResourceManager.GetString("DefaultHttpTokenType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default token type to be issued for HTTP (non WS-*) token requests..
        /// </summary>
        public static string DefaultHttpTokenTypeDescription {
            get {
                return ResourceManager.GetString("DefaultHttpTokenTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Token Lifetime.
        /// </summary>
        public static string DefaultTokenLifetime {
            get {
                return ResourceManager.GetString("DefaultTokenLifetime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default lifetime (in hours) of tokens issued from this STS..
        /// </summary>
        public static string DefaultTokenLifetimeDescription {
            get {
                return ResourceManager.GetString("DefaultTokenLifetimeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default WS* Token.
        /// </summary>
        public static string DefaultWSTokenType {
            get {
                return ResourceManager.GetString("DefaultWSTokenType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default token type to be issued for WS-Federation and WS-Trust token requests..
        /// </summary>
        public static string DefaultWSTokenTypeDescription {
            get {
                return ResourceManager.GetString("DefaultWSTokenTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable SSL.
        /// </summary>
        public static string DisableSSL {
            get {
                return ResourceManager.GetString("DisableSSL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This setting is used to disable SSL in IdentityServer and would be used if you are using an external SSL device..
        /// </summary>
        public static string DisableSSLDescription {
            get {
                return ResourceManager.GetString("DisableSSLDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Client Certificates.
        /// </summary>
        public static string EnableClientCertificateAuthentication {
            get {
                return ResourceManager.GetString("EnableClientCertificateAuthentication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow users to authenticate in the web frontend with client certificates..
        /// </summary>
        public static string EnableClientCertificateAuthenticationDescription {
            get {
                return ResourceManager.GetString("EnableClientCertificateAuthenticationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only Users in the &apos;IdentityServerUsers&apos; role can request tokens.
        /// </summary>
        public static string EnforceUsersGroupMembership {
            get {
                return ResourceManager.GetString("EnforceUsersGroupMembership", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled this setting will cause the STS to only issue tokens for users that are in the &apos;IdentityServerUsers&apos; role..
        /// </summary>
        public static string EnforceUsersGroupMembershipDescription {
            get {
                return ResourceManager.GetString("EnforceUsersGroupMembershipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP Port.
        /// </summary>
        public static string HttpPort {
            get {
                return ResourceManager.GetString("HttpPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port number the STS using for HTTP..
        /// </summary>
        public static string HttpPortDescription {
            get {
                return ResourceManager.GetString("HttpPortDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTPS Port.
        /// </summary>
        public static string HttpsPort {
            get {
                return ResourceManager.GetString("HttpsPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port number the STS is using for HTTPS..
        /// </summary>
        public static string HttpsPortDescription {
            get {
                return ResourceManager.GetString("HttpsPortDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contact Email.
        /// </summary>
        public static string IssuerContactEmail {
            get {
                return ResourceManager.GetString("IssuerContactEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email of the contact person that administrates this STS..
        /// </summary>
        public static string IssuerContactEmailDescription {
            get {
                return ResourceManager.GetString("IssuerContactEmailDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Site ID.
        /// </summary>
        public static string IssuerUri {
            get {
                return ResourceManager.GetString("IssuerUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unique identifier for your STS. Must be a URI and will be the identifier issued in tokens and replying parties will use to identify your identity provider (this STS)..
        /// </summary>
        public static string IssuerUriDescription {
            get {
                return ResourceManager.GetString("IssuerUriDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Token Lifetime.
        /// </summary>
        public static string MaximumTokenLifetime {
            get {
                return ResourceManager.GetString("MaximumTokenLifetime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum lifetime (in hours) of tokens issued from this STS if a relying party requests a lifetime longer than the default..
        /// </summary>
        public static string MaximumTokenLifetimeDescription {
            get {
                return ResourceManager.GetString("MaximumTokenLifetimeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public Host Name.
        /// </summary>
        public static string PublicHostName {
            get {
                return ResourceManager.GetString("PublicHostName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The public host name for this web site. Should be used when the web site host name is not the same as the public facing host name. Useful when using load balancers or a virtual IP address..
        /// </summary>
        public static string PublicHostNameDescription {
            get {
                return ResourceManager.GetString("PublicHostNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Require Token Encryption.
        /// </summary>
        public static string RequireEncryption {
            get {
                return ResourceManager.GetString("RequireEncryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled this setting requires all outgoing tokens to be encrypted..
        /// </summary>
        public static string RequireEncryptionDescription {
            get {
                return ResourceManager.GetString("RequireEncryptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Require RP Registration.
        /// </summary>
        public static string RequireRelyingPartyRegistration {
            get {
                return ResourceManager.GetString("RequireRelyingPartyRegistration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled the STS will only issue tokens for relying parties that are registed..
        /// </summary>
        public static string RequireRelyingPartyRegistrationDescription {
            get {
                return ResourceManager.GetString("RequireRelyingPartyRegistrationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Site Name.
        /// </summary>
        public static string SiteName {
            get {
                return ResourceManager.GetString("SiteName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Descriptive name of your STS..
        /// </summary>
        public static string SiteNameDescription {
            get {
                return ResourceManager.GetString("SiteNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSO Duration.
        /// </summary>
        public static string SsoCookieLifetime {
            get {
                return ResourceManager.GetString("SsoCookieLifetime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The duration (in hours) of the single sign-on cookies used for this web site..
        /// </summary>
        public static string SsoCookieLifetimeDescription {
            get {
                return ResourceManager.GetString("SsoCookieLifetimeDescription", resourceCulture);
            }
        }
    }
}
