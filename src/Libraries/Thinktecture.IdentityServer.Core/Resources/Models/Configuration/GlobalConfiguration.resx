<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SiteNameDescription" xml:space="preserve">
    <value>Descriptive name of your STS.</value>
  </data>
  <data name="IssuerUri" xml:space="preserve">
    <value>Site ID</value>
  </data>
  <data name="IssuerUriDescription" xml:space="preserve">
    <value>Unique identifier for your STS. Must be a URI and will be the identifier issued in tokens and replying parties will use to identify your identity provider (this STS).</value>
  </data>
  <data name="SiteName" xml:space="preserve">
    <value>Site Name</value>
  </data>
  <data name="IssuerContactEmail" xml:space="preserve">
    <value>Contact Email</value>
  </data>
  <data name="IssuerContactEmailDescription" xml:space="preserve">
    <value>Email of the contact person that administrates this STS.</value>
  </data>
  <data name="DefaultWSTokenType" xml:space="preserve">
    <value>Default WS* Token</value>
  </data>
  <data name="DefaultWSTokenTypeDescription" xml:space="preserve">
    <value>Default token type to be issued for WS-Federation and WS-Trust token requests.</value>
  </data>
  <data name="DefaultHttpTokenTypeDescription" xml:space="preserve">
    <value>Default token type to be issued for HTTP (non WS-*) token requests.</value>
  </data>
  <data name="DefaultHttpTokenType" xml:space="preserve">
    <value>Default HTTP Token</value>
  </data>
  <data name="DefaultTokenLifetime" xml:space="preserve">
    <value>Default Token Lifetime</value>
  </data>
  <data name="DefaultTokenLifetimeDescription" xml:space="preserve">
    <value>The default lifetime (in hours) of tokens issued from this STS.</value>
  </data>
  <data name="MaximumTokenLifetime" xml:space="preserve">
    <value>Maximum Token Lifetime</value>
  </data>
  <data name="MaximumTokenLifetimeDescription" xml:space="preserve">
    <value>The maximum lifetime (in hours) of tokens issued from this STS if a relying party requests a lifetime longer than the default.</value>
  </data>
  <data name="SsoCookieLifetime" xml:space="preserve">
    <value>SSO Duration</value>
  </data>
  <data name="SsoCookieLifetimeDescription" xml:space="preserve">
    <value>The duration (in hours) of the single sign-on cookies used for this web site.</value>
  </data>
  <data name="RequireEncryption" xml:space="preserve">
    <value>Require Token Encryption</value>
  </data>
  <data name="RequireEncryptionDescription" xml:space="preserve">
    <value>When enabled this setting requires all outgoing tokens to be encrypted.</value>
  </data>
  <data name="RequireRelyingPartyRegistration" xml:space="preserve">
    <value>Require RP Registration</value>
  </data>
  <data name="RequireRelyingPartyRegistrationDescription" xml:space="preserve">
    <value>When enabled the STS will only issue tokens for relying parties that are registed.</value>
  </data>
  <data name="EnableClientCertificateAuthentication" xml:space="preserve">
    <value>Enable Client Certificates</value>
  </data>
  <data name="EnableClientCertificateAuthenticationDescription" xml:space="preserve">
    <value>Allow users to authenticate in the web frontend with client certificates.</value>
  </data>
  <data name="HttpPort" xml:space="preserve">
    <value>HTTP Port</value>
  </data>
  <data name="HttpPortDescription" xml:space="preserve">
    <value>Port number the STS using for HTTP.</value>
  </data>
  <data name="HttpsPort" xml:space="preserve">
    <value>HTTPS Port</value>
  </data>
  <data name="HttpsPortDescription" xml:space="preserve">
    <value>Port number the STS is using for HTTPS.</value>
  </data>
  <data name="EnforceUsersGroupMembership" xml:space="preserve">
    <value>Only Users in the 'IdentityServerUsers' role can request tokens</value>
  </data>
  <data name="EnforceUsersGroupMembershipDescription" xml:space="preserve">
    <value>When enabled this setting will cause the STS to only issue tokens for users that are in the 'IdentityServerUsers' role.</value>
  </data>
  <data name="DisableSSL" xml:space="preserve">
    <value>Disable SSL</value>
  </data>
  <data name="DisableSSLDescription" xml:space="preserve">
    <value>This setting is used to disable SSL in IdentityServer and would be used if you are using an external SSL device.</value>
  </data>
  <data name="PublicHostName" xml:space="preserve">
    <value>Public Host Name</value>
  </data>
  <data name="PublicHostNameDescription" xml:space="preserve">
    <value>The public host name for this web site. Should be used when the web site host name is not the same as the public facing host name. Useful when using load balancers or a virtual IP address.</value>
  </data>
</root>